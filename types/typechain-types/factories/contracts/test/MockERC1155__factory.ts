/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockERC1155,
  MockERC1155Interface,
} from "../../../contracts/test/MockERC1155";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040805160208101909152600081526200002c8162000033565b50620001b6565b6002620000418282620000ea565b5050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200007057607f821691505b6020821081036200009157634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620000e557600081815260208120601f850160051c81016020861015620000c05750805b601f850160051c820191505b81811015620000e157828155600101620000cc565b5050505b505050565b81516001600160401b0381111562000106576200010662000045565b6200011e816200011784546200005b565b8462000097565b602080601f8311600181146200015657600084156200013d5750858301515b600019600386901b1c1916600185901b178555620000e1565b600085815260208120601f198616915b82811015620001875788860151825594840194600190910190840162000166565b5085821015620001a65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6116bf80620001c66000396000f3fe608060405234801561001057600080fd5b50600436106100bd5760003560e01c80634e1273f411610076578063a22cb4651161005b578063a22cb4651461017c578063e985e9c51461018f578063f242432a146101cb57600080fd5b80634e1273f414610153578063714cff561461017357600080fd5b80630e89341c116100a75780630e89341c1461010b5780632eb2c2d61461012b57806340c10f191461014057600080fd5b8062fdd58e146100c257806301ffc9a7146100e8575b600080fd5b6100d56100d0366004610fa9565b6101de565b6040519081526020015b60405180910390f35b6100fb6100f6366004610fec565b61028a565b60405190151581526020016100df565b61011e610119366004611010565b610325565b6040516100df919061106f565b61013e6101393660046111ce565b6103b9565b005b61013e61014e366004610fa9565b61045b565b610166610161366004611278565b61047b565b6040516100df919061137e565b6100d560035481565b61013e61018a366004611391565b6105b9565b6100fb61019d3660046113cd565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61013e6101d9366004611400565b6105c4565b60006001600160a01b0383166102615760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201527f616c6964206f776e65720000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b031982167fd9b67a260000000000000000000000000000000000000000000000000000000014806102ed57506001600160e01b031982167f0e89341c00000000000000000000000000000000000000000000000000000000145b8061028457507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b0319831614610284565b60606002805461033490611465565b80601f016020809104026020016040519081016040528092919081815260200182805461036090611465565b80156103ad5780601f10610382576101008083540402835291602001916103ad565b820191906000526020600020905b81548152906001019060200180831161039057829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103d557506103d5853361019d565b6104475760405162461bcd60e51b815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201527f6572206f7220617070726f7665640000000000000000000000000000000000006064820152608401610258565b610454858585858561065f565b5050505050565b61047782826001604051806020016040528060008152506108d2565b5050565b606081518351146104f45760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610258565b6000835167ffffffffffffffff81111561051057610510611082565b604051908082528060200260200182016040528015610539578160200160208202803683370190505b50905060005b84518110156105b15761058485828151811061055d5761055d61149f565b60200260200101518583815181106105775761057761149f565b60200260200101516101de565b8282815181106105965761059661149f565b60209081029190910101526105aa816114cb565b905061053f565b509392505050565b610477338383610a02565b6001600160a01b0385163314806105e057506105e0853361019d565b6106525760405162461bcd60e51b815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201527f6572206f7220617070726f7665640000000000000000000000000000000000006064820152608401610258565b6104548585858585610af6565b81518351146106d65760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152608401610258565b6001600160a01b03841661073a5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610258565b3360005b845181101561086457600085828151811061075b5761075b61149f565b6020026020010151905060008583815181106107795761077961149f565b602090810291909101810151600084815280835260408082206001600160a01b038e16835290935291909120549091508181101561080c5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610258565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906108499084906114e4565b925050819055505050508061085d906114cb565b905061073e565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516108b49291906114f7565b60405180910390a46108ca818787878787610ca1565b505050505050565b6001600160a01b03841661094e5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610258565b33600061095a85610e46565b9050600061096785610e46565b90506000868152602081815260408083206001600160a01b038b168452909152812080548792906109999084906114e4565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46109f983600089898989610e91565b50505050505050565b816001600160a01b0316836001600160a01b031603610a895760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610258565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610b5a5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610258565b336000610b6685610e46565b90506000610b7385610e46565b90506000868152602081815260408083206001600160a01b038c16845290915290205485811015610bf95760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610258565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610c369084906114e4565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610c96848a8a8a8a8a610e91565b505050505050505050565b6001600160a01b0384163b156108ca5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610ce59089908990889088908890600401611525565b6020604051808303816000875af1925050508015610d20575060408051601f3d908101601f19168201909252610d1d91810190611583565b60015b610dd557610d2c6115a0565b806308c379a003610d655750610d406115bc565b80610d4b5750610d67565b8060405162461bcd60e51b8152600401610258919061106f565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d4552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610258565b6001600160e01b0319811663bc197c8160e01b146109f95760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610258565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610e8057610e8061149f565b602090810291909101015292915050565b6001600160a01b0384163b156108ca5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610ed59089908990889088908890600401611646565b6020604051808303816000875af1925050508015610f10575060408051601f3d908101601f19168201909252610f0d91810190611583565b60015b610f1c57610d2c6115a0565b6001600160e01b0319811663f23a6e6160e01b146109f95760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610258565b80356001600160a01b0381168114610fa457600080fd5b919050565b60008060408385031215610fbc57600080fd5b610fc583610f8d565b946020939093013593505050565b6001600160e01b031981168114610fe957600080fd5b50565b600060208284031215610ffe57600080fd5b813561100981610fd3565b9392505050565b60006020828403121561102257600080fd5b5035919050565b6000815180845260005b8181101561104f57602081850181015186830182015201611033565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006110096020830184611029565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156110be576110be611082565b6040525050565b600067ffffffffffffffff8211156110df576110df611082565b5060051b60200190565b600082601f8301126110fa57600080fd5b81356020611107826110c5565b6040516111148282611098565b83815260059390931b850182019282810191508684111561113457600080fd5b8286015b8481101561114f5780358352918301918301611138565b509695505050505050565b600082601f83011261116b57600080fd5b813567ffffffffffffffff81111561118557611185611082565b60405161119c601f8301601f191660200182611098565b8181528460208386010111156111b157600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156111e657600080fd5b6111ef86610f8d565b94506111fd60208701610f8d565b9350604086013567ffffffffffffffff8082111561121a57600080fd5b61122689838a016110e9565b9450606088013591508082111561123c57600080fd5b61124889838a016110e9565b9350608088013591508082111561125e57600080fd5b5061126b8882890161115a565b9150509295509295909350565b6000806040838503121561128b57600080fd5b823567ffffffffffffffff808211156112a357600080fd5b818501915085601f8301126112b757600080fd5b813560206112c4826110c5565b6040516112d18282611098565b83815260059390931b85018201928281019150898411156112f157600080fd5b948201945b838610156113165761130786610f8d565b825294820194908201906112f6565b9650508601359250508082111561132c57600080fd5b50611339858286016110e9565b9150509250929050565b600081518084526020808501945080840160005b8381101561137357815187529582019590820190600101611357565b509495945050505050565b6020815260006110096020830184611343565b600080604083850312156113a457600080fd5b6113ad83610f8d565b9150602083013580151581146113c257600080fd5b809150509250929050565b600080604083850312156113e057600080fd5b6113e983610f8d565b91506113f760208401610f8d565b90509250929050565b600080600080600060a0868803121561141857600080fd5b61142186610f8d565b945061142f60208701610f8d565b93506040860135925060608601359150608086013567ffffffffffffffff81111561145957600080fd5b61126b8882890161115a565b600181811c9082168061147957607f821691505b60208210810361149957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016114dd576114dd6114b5565b5060010190565b80820180821115610284576102846114b5565b60408152600061150a6040830185611343565b828103602084015261151c8185611343565b95945050505050565b60006001600160a01b03808816835280871660208401525060a0604083015261155160a0830186611343565b82810360608401526115638186611343565b905082810360808401526115778185611029565b98975050505050505050565b60006020828403121561159557600080fd5b815161100981610fd3565b600060033d11156115b95760046000803e5060005160e01c5b90565b600060443d10156115ca5790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156115fa57505050505090565b82850191508151818111156116125750505050505090565b843d870101602082850101111561162c5750505050505090565b61163b60208286010187611098565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261167e60a0830184611029565b97965050505050505056fea2646970667358221220c4945853df76b67441dd57b7dbccbd0015736dec028732b79b67b998f7d6772764736f6c63430008120033";

type MockERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC1155__factory extends ContractFactory {
  constructor(...args: MockERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockERC1155 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockERC1155__factory {
    return super.connect(runner) as MockERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC1155Interface {
    return new Interface(_abi) as MockERC1155Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockERC1155 {
    return new Contract(address, _abi, runner) as unknown as MockERC1155;
  }
}

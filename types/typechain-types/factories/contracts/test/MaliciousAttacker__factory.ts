/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MaliciousAttacker,
  MaliciousAttackerInterface,
} from "../../../contracts/test/MaliciousAttacker";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_victimContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "attack",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stolenFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "victimContract",
    outputs: [
      {
        internalType: "contract AuctionDeposit",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516106e73803806106e7833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b6105d0806101176000396000f3fe6080604052600436106100385760003560e01c806310890a871461013357806364dd891a1461015e578063f32d251d1461018757610057565b3661005757346001600082825461004f9190610371565b925050819055005b670de0b6b3a764000060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631106101315760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d670de0b6b3a76400006040518263ffffffff1660e01b81526004016100fe91906103ea565b600060405180830381600087803b15801561011857600080fd5b505af115801561012c573d6000803e3d6000fd5b505050505b005b34801561013f57600080fd5b506101486101b2565b6040516101559190610414565b60405180910390f35b34801561016a57600080fd5b5061018560048036038101906101809190610460565b6101b8565b005b34801561019357600080fd5b5061019c610314565b6040516101a99190610502565b60405180910390f35b60015481565b804710156101fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f29061057a565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b6b55f25826040518263ffffffff1660e01b81526004016102549190610414565b600060405180830381600087803b15801561026e57600080fd5b505af1158015610282573d6000803e3d6000fd5b5050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b81526004016102df9190610414565b600060405180830381600087803b1580156102f957600080fd5b505af115801561030d573d6000803e3d6000fd5b5050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061037c82610338565b915061038783610338565b925082820190508082111561039f5761039e610342565b5b92915050565b6000819050919050565b6000819050919050565b60006103d46103cf6103ca846103a5565b6103af565b610338565b9050919050565b6103e4816103b9565b82525050565b60006020820190506103ff60008301846103db565b92915050565b61040e81610338565b82525050565b60006020820190506104296000830184610405565b92915050565b600080fd5b61043d81610338565b811461044857600080fd5b50565b60008135905061045a81610434565b92915050565b6000602082840312156104765761047561042f565b5b60006104848482850161044b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104c86104c36104be8461048d565b6103af565b61048d565b9050919050565b60006104da826104ad565b9050919050565b60006104ec826104cf565b9050919050565b6104fc816104e1565b82525050565b600060208201905061051760008301846104f3565b92915050565b600082825260208201905092915050565b7f496e73756666696369656e742062616c616e636520666f722061747461636b00600082015250565b6000610564601f8361051d565b915061056f8261052e565b602082019050919050565b6000602082019050818103600083015261059381610557565b905091905056fea2646970667358221220a86be07ef4573648390a93f3c0beac76cf33a37aff5f9152d05321b25523eee864736f6c63430008120033";

type MaliciousAttackerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MaliciousAttackerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MaliciousAttacker__factory extends ContractFactory {
  constructor(...args: MaliciousAttackerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _victimContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_victimContract, overrides || {});
  }
  override deploy(
    _victimContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_victimContract, overrides || {}) as Promise<
      MaliciousAttacker & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MaliciousAttacker__factory {
    return super.connect(runner) as MaliciousAttacker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MaliciousAttackerInterface {
    return new Interface(_abi) as MaliciousAttackerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MaliciousAttacker {
    return new Contract(address, _abi, runner) as unknown as MaliciousAttacker;
  }
}
